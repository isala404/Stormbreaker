name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu    # x86 Linux
          - aarch64-unknown-linux-gnu   # ARM64 Linux (M1 compatible)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Install cross
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cross --force

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}/release/stormbreaker artifacts/stormbreaker-${{ matrix.target }}
          cd artifacts
          tar -czvf stormbreaker-${{ matrix.target }}.tar.gz stormbreaker-${{ matrix.target }}
          shasum -a 256 stormbreaker-${{ matrix.target }}.tar.gz > stormbreaker-${{ matrix.target }}.tar.gz.sha256

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: stormbreaker-${{ matrix.target }}
          path: artifacts/*

  create-release:
    name: Create Release
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get tag name
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_tag.outputs.TAG }}
          draft: false
          prerelease: false
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
